import random
"""
CONSIGNA: 
El trabajo pr√°ctico permite aplicar conceptos te√≥ricos en un entorno pr√°ctico. 
Se propone que cada equipo encuentre y dise√±e una situaci√≥n problem√°tica.
Cada grupo ser√° conformado por 4 personas.
En el desarrollo del TP tendr√°n que utilizar: 
* Estructuras b√°sicas (secuencial ‚Äì decisi√≥n ‚Äì iteraci√≥n) 
* Datos estructurados (Listas) ‚Äì m√°ximos/m√≠nimos, b√∫squeda, ordenamiento
* Programaci√≥n modular - funciones
* Manejos de datos al azar (random)
No se pueden utilizar: archivos, manejo de excepciones, diccionarios, tuplas, conjuntos, ciclos 
infinitos, ruptura de ciclos, programaci√≥n orientada a objetos, cadena de caracteres (strings)

IDEA: CAJERO AUTOM√ÅTICO:
- Egreso de Dinero
- Informes en base a las operaciones

ALCANCE:

Una entidad bancaria nos ha encargado el desarrollo de un sistema de cajero autom√°tico, el mismo debe permitir egresos de sumas de dinero. Se identifica el cajero con un numero random. Se ingresa una tarjeta al sistema, que va a tener n√∫meros aleatorios. El cajero tiene un monto fijo total que se va debitando conforme se hace cada extracci√≥n. Adem√°s, tiene una suma fija de billetes (de 2000, de 1000, de 500 y de 100) que entrega. Por cada extracci√≥n se optimizar√° qu√© billetes van a ser brindados. El sistema termina al ingresar -1 como monto de extracci√≥n y deber√° informar:
‚Ä¢	Lista de transacciones que se hicieron en el d√≠a
‚Ä¢	Lista de transacciones que se hicieron en el d√≠a por tarjeta (ordenado ascendiente y sin duplicados de tarjeta)
‚Ä¢	Consulta de cantidad de extracciones por tarjeta
‚Ä¢	La transacci√≥n (monto m√≠nimo) que se extrajo en el d√≠a
‚Ä¢	La tarjeta que extrajo el monto m√°ximo (acumulado por tarjeta)
"""

# Variables
billetes_valores = [2000, 1000, 500, 100]  # Valores de los billetes ($54000 con los billetes que tenemos) #(‚úî)
billetes_cantidades = [10, 20, 30, 40]  # Cantidades de cada billete #(‚úî)
numeroDeCajero = random.randint(0, 6) #(‚úî)
montoEgreso = 0 #(‚úî)
tarjetas = [] #(‚úî)
listaEgresos = []

def tarjetaRandom():
    numeroRandom = ''.join([str(random.randint(0, 9)) for _ in range(6)])
    print("Su num de tarjeta es: ",numeroRandom)
    tarjetas.append(numeroRandom)
    return tarjetas

def nuevoMovimiento():
    consulta = int(input("""
                         ¬øDesea realizar otro retiro?
                         1- SI
                         2- NO
                            """))
    while consulta < 1 or consulta > 2:
        print("Opci√≥n inv√°lida, elija una opcion correcta")
        consulta = int(input("""
                         ¬øDesea realizar otro retiro?
                         1- SI
                         2- NO
                            """))
    if consulta == 1:
        sacarPlata(billetes_valores, billetes_cantidades)
    else:
        print("""
              Muchas gracias por elegirnos! 
              Por favor, retire su tarjeta y deje pasar al siguiente usuario""")
        tarjetaRandom()
        sacarPlata(billetes_valores, billetes_cantidades)

# Repensar utilizando un For (listas[i])
def sacarBilletes(index,importe, listaBilletes, listaCantidad):
    # Entrar a las listas por referencias, mediante par√°metros, no de forma global
    print("Hay ", listaCantidad[index] ," billetes de ",listaBilletes[index])
    continuar = True
    totalFaltante = importe
    while listaCantidad[index] > 0 and continuar:
        if listaCantidad[index] == 0:
            print("No quedan m√°s billetes de ",listaBilletes[index])
        else:
            billetes = importe // listaBilletes[index]
            cantidadDeBilletes = 0

            if billetes > listaCantidad[index]:
                cantidadDeBilletes = listaCantidad[index]
            else:
                cantidadDeBilletes=billetes
            
            listaCantidad[index] -= cantidadDeBilletes
            totalFaltante = importe -(cantidadDeBilletes * listaBilletes[index])
            continuar=False
            print("Se entregan: ", cantidadDeBilletes, " billetes de ",listaBilletes[index])
    return totalFaltante

def sacarPlata(billetesValor, billetesCantidad):
    montoEgreso = int(input("Ingrese un importe de dinero a retirar: $"))
    total = cantidaEnCajero(billetes_valores,billetes_cantidades)

    while total < montoEgreso:
        print("El monto supera la cantidad disponible en el cajero")
        montoEgreso = int(input("Ingrese un nuevo importe de dinero a retirar: $"))
    listaEgresos.append(montoEgreso)

    for i in range(len(billetesCantidad)):
        if montoEgreso > 0:
            montoEgreso = sacarBilletes(i,montoEgreso, billetesValor, billetesCantidad)
    nuevoMovimiento()

def informarTransaciones():
    print(listaEgresos)

def cantidaEnCajero(billetesValor,billetesCantidad):
    cantidadTotal = 0
    for i in range(len(billetesCantidad)):
        cantidadTotal += billetesCantidad[i] * billetesValor[i]
    return cantidadTotal

def main(): # Funcion principal
    print("""
*******************************

Cajero Autom√°tico "MMMC" üí∞üí∞üí∞

*******************************
""")
    print("N√∫mero de Cajero: #", numeroDeCajero)
    tarjetaRandom()
    sacarPlata(billetes_valores, billetes_cantidades)

    informarTransaciones()

if __name__=='__main__': # Entry Point
    main()